@using CourseProjectWebApp.Authorization;
@using Markdig
@using Microsoft.AspNetCore.Authorization
@using CourseProjectWebApp.Models
@using static CourseProjectWebApp.Authorization.ProjectConstans
@inject IAuthorizationService AuthorizationService
@addTagHelper *, CourseProjectWebApp
@model CourseProjectWebApp.Models.ViewModels.CollectionItemsViewModel

@{
	ViewData["Title"] = "Details";
}

@{
	var result = Markdown.ToHtml(Model.Coll.Description);
}
<div>
	
	<div class="row">
		<dl class="col-md-6">
			<h1>Details</h1>
			<h4>Collection: @Html.DisplayFor(model => model.Coll.Title)</h4>
			<dt class="col-sm-2">
				@Html.DisplayNameFor(model => model.Coll.Topic)
			</dt>
			<dd class="col-sm-10">
				@Html.DisplayFor(model => model.Coll.Topic)
			</dd>
			<dt class="col-sm-2">
				@Html.DisplayNameFor(model => model.Coll.Description)
			</dt>
			<dd class="col-sm-10 mb-0">
				@Html.Raw(result)
			</dd>
		</dl>
		<div class="col-md-6">
			@if(Model.Coll.ImageUrl != null)
			{
				<img src="@Model.Coll.ImageUrl" style="max-width:350px;max-height:350px"/>
			}
		</div>
	</div>
	<div>
		<div class="hstack gap-3 mb-2 mt-1">
			@if ((await AuthorizationService.AuthorizeAsync(User, Model.Coll, CollectionOperations.Update)).Succeeded)
			{
				<a class="btn btn-primary px-4" asp-action="Edit" asp-route-id="@Model.Coll.Id">Edit</a>
			}
			@if ((await AuthorizationService.AuthorizeAsync(User, Model.Coll, CollectionOperations.Delete)).Succeeded)
			{
				<button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal">
					Delete
				</button>

				<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
					<div class="modal-dialog">
						<div class="modal-content">
							<div class="modal-header">
								<h5 class="modal-title" id="exampleModalLabel">Attention</h5>
								<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
							</div>
							<div class="modal-body">
								This action will delete model with all conected items!
							</div>
							<div class="modal-footer">
								<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
								<form asp-action="Delete" asp-route-id="@Model.Coll.Id" method="post">
									<button type="submit" class="btn btn-danger">Delete</button>
								</form>
							</div>
						</div>
					</div>
				</div>
			}
		</div>
	</div>
</div>
<hr />
@if (Model.Items.Count == 0)
{
	<h1 class="fs-3">This Collection is empty</h1>
	@if ((await AuthorizationService.AuthorizeAsync(User, Model.Coll, CollectionOperations.Create)).Succeeded)
	{
		<a asp-controller="Item" asp-action="Create" asp-route-id="@Model.Coll.Id" class="fs-5">Start with creating new one</a>
	}
}
else
{
	@if ((await AuthorizationService.AuthorizeAsync(User, Model.Coll, CollectionOperations.Create)).Succeeded)
	{
		<a asp-controller="Item" asp-action="Create" asp-route-id="@Model.Coll.Id" class="btn-primary btn">Create new Item</a>
	}
	<h2 class="fs-4 mt-2">Here is list of Items:</h2>
	<div class="list-group">
		<table class="table text-center">
			<thead>
				<tr>
					<th><a asp-action="details" asp-route-id="@Model.Coll.Id" asp-route-sortOrder="@ViewData["IdSortParm"]">ID</a></th>
					<th><a asp-action="details" asp-route-id="@Model.Coll.Id" asp-route-sortOrder="@ViewData["TitleSortParm"]">Title</a></th>
					@if(Model.AddStr != null)
					{
						foreach(var item in Model.AddStr)
						{
							<th><a asp-action="details" asp-route-id="@Model.Coll.Id" asp-route-addStrSort="@ViewData[@item.Name]">@item.Name</a></th>
						}
					}
					<th>Actions</th>
				</tr>
			</thead>
			<tbody>
				@foreach(var item in Model.Items)
				{
					<tr>
						<td>@item.Id</td>
						<td>@item.Title</td>
						@if(item.ItemsAdditionalStrings != null)
						{
							foreach(var itemAddStr in item.ItemsAdditionalStrings)
							{
								<td>@itemAddStr.Data</td>
							}
						}
						<td>
							<div class="d-flex justify-content-center">
								<a asp-controller="item" asp-action="Details" asp-route-id="@Model.Coll.Id" asp-route-itemId="@item.Id" class="btn btn-primary">Show</a>
								@if ((await AuthorizationService.AuthorizeAsync(User, Model.Coll, CollectionOperations.Update)).Succeeded)
								{
									<a asp-controller="Item" asp-action="Edit" asp-route-id="@Model.Coll.Id" asp-route-itemId="@item.Id" class="btn btn-primary ms-1 me-1">Edit</a>

								}
								@if ((await AuthorizationService.AuthorizeAsync(User, Model.Coll, CollectionOperations.Delete)).Succeeded)
								{
									<form method="post">
										<button asp-controller="Item" asp-action="Delete" asp-route-id="@Model.Coll.Id" asp-route-itemId="@item.Id" type="submit" class="btn btn-danger">Delete</button>
									</form>
								}
							</div>
						</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
}
