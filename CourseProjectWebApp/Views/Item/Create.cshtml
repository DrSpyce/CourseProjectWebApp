@model CourseProjectWebApp.Models.ViewModels.ItemTagsViewModel
@using CourseProjectWebApp.Models

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>


<h4>Item</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="create" asp-route-id="@ViewBag.Collection.Id">
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Item.Title" class="control-label"></label>
                <input asp-for="Item.Title" class="form-control" />
                <span asp-validation-for="Item.Title" class="text-danger"></span>
            </div>
            <div class="form-group" id="tagsForm">
                <label for="tagName">Add tags</label>
                <input class="form-control" id="tagName" />
                @if (Model != null)
                {
                    <div class="visually-hidden" id="allTags">
                        @for (var i = 0; i < Model.Tags.Count; i++)
                        {
                            <span>@Model.Tags[i].Name</span>
                            <input asp-for="Tags[i].Name" value="@Model.Tags[i].Name">
                        }
                    </div>
                }
                else
                {
                    <p class="visually-hidden" id="model">model=null</p>
                }
                <div class="visually-hidden" id="allTags"></div>
            </div>
            @for (var i = 0; i < ViewBag.Collection.AdditionalStrings.Count; i++)
            {
                <div class="form-group">
                    <label asp-for="Item.ItemsAdditionalStrings[i].Data" class="control-label">@ViewBag.Collection.AdditionalStrings[i].Name</label>
                    <input type="hidden" value="@ViewBag.Collection.AdditionalStrings[i].Id" name="Item.ItemsAdditionalStrings[@i].AdditionalStringsId">
                    @switch (ViewBag.Collection.AdditionalStrings[i].TypeOfData)
                    {
                        case AdditionalStrings.TypesOfData.integer:
                            <input class="form-control" type="number" asp-for="Item.ItemsAdditionalStrings[i].Data" />
                            break;
                        case AdditionalStrings.TypesOfData.title:
                            <input class="form-control" type="text" asp-for="Item.ItemsAdditionalStrings[i].Data" />
                            break;
                        case AdditionalStrings.TypesOfData.text:
                            <textarea class="form-control" asp-for="Item.ItemsAdditionalStrings[i].Data"></textarea>
                            break;
                        case AdditionalStrings.TypesOfData.boolean:
                            <input type="radio" asp-for="Item.ItemsAdditionalStrings[i].Data" value="@ViewBag.Collection.AdditionalStrings[i].Name" />
                            break;
                        case AdditionalStrings.TypesOfData.date:
                            <input class="form-control" type="date" asp-for="Item.ItemsAdditionalStrings[i].Data" />
                            break;
                        default:
                            <p>Something went wrong</p>
                            break;
                    }
                    <span asp-validation-for="Item.ItemsAdditionalStrings[i].Data" class="text-danger"></span>
                </div>
            }
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="https://cdn.jsdelivr.net/npm/@@yaireo/tagify"></script>
    <script src="https://cdn.jsdelivr.net/npm/@@yaireo/tagify/dist/tagify.polyfills.min.js"></script>
    <script>
        function onInput(e) {
            checkAlert();
            var value = e.detail.value;
            tagify.whitelist = null;
            tagify.dropdown.hide();
            fetch('@Url.Action("GetTag", "Ajax")' + '?term=' + value)
                .then(RES => RES.json())
                .then(function (newWhitelist) {
                    tagify.whitelist = newWhitelist;
                    tagify.dropdown.show(value);
                });
        }
    </script>
    <script src="~/js/tags.js" asp-append-version="true"></script>
	}
